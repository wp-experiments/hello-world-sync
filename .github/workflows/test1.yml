# Name of this GitHub Actions workflow.
name: Semgrep

on:
  # Scan changed files in PRs (diff-aware scanning):
  pull_request: {}
  # Scan mainline branches and report all findings: 
  push:
    branches: ["master", "main"]
  # Schedule the CI job (this method uses cron syntax):
  schedule:
    - cron: '30 0 1,15 * *' # Scheduled for 00:30 UTC on both the 1st and 15th of the month

jobs:
  decrypt:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the rules repo
        uses: actions/checkout@v3
        with:
          repository: wp-experiments/test-semgrep
          path: test-semgrep
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          ls -la
          ls -la test-semgrep
          mkdir __w/
          #gpg --quiet --batch --yes --decrypt --passphrase="$PASSPHRASE" --output __w/basic_xss.yaml test-semgrep/xss/basic_xss.yaml.gpg
          cd test-semgrep
          for FILE in *.gpg; do
            echo $FILE
            gpg --quiet --batch --yes --decrypt --passphrase="$PASSPHRASE" --output ../__w/"${FILE%.gpg}".yaml $FILE
          done
          pwd
          #gpg --quiet --yes --passphrase="$PASSPHRASE" --decrypt-files *.gpg
          ##mv *.yaml __w/
        env:
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - name: listing the yaml file contents
        run: |
          ls -la __w/
          cat __w/basic_xss.yaml
      - uses: actions/upload-artifact@master
        with:
          name: my-path
          path: __w/
          
  semgrep:
    needs: decrypt
    # User-definable name of this GitHub Actions job:
    name: Scan
    # If you are self-hosting, change the following `runs-on` value: 
    runs-on: ubuntu-latest

    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: returntocorp/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      - name: Check out the plugin repo
        uses: actions/checkout@v3
        with:
          repository: wp-experiments/hello-world-sync
          path: hello-world-sync
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          ls -la
          ls -la hello-world-sync
          echo "-------"

      # Fetch project source with GitHub Actions Checkout.
      - name: Check out the current repo
        uses: actions/checkout@v3
        with:
          path: main
      - uses: actions/download-artifact@master
        with:
          name: my-path
          path: __w/
      - run: cat __w/basic_xss.yaml
        
      # Run the "semgrep ci" command on the command line of the docker image.
      - run: |
          semgrep ci --sarif -o output.sarif || true
          ls -la 
          cat output.sarif
      
      #- name: save report as pipeline artifact
        #uses: actions/upload-artifact@v3
        #with:
          #name: output.sarif
          #path: output.sarif

        
      #- name: publish code scanning alerts
        #uses: github/codeql-action/upload-sarif@v2
        #with:
          #sarif_file: output.sarif
          #category: semgrep
          
        env:
           # Add the rules that Semgrep uses by setting the SEMGREP_RULES environment variable. 
           SEMGREP_RULES: __w/  # more at semgrep.dev/explore
           SEMGREP_REPO_NAME: 'wp-experiments/hello-world-sync'
           # Uncomment SEMGREP_TIMEOUT to set this job's timeout (in seconds):
           # Default timeout is 1800 seconds (30 minutes).
           # Set to 0 to disable the timeout.
           # SEMGREP_TIMEOUT: 300
           #SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
   
      - name: Upload SARIF file for GitHub Advanced Security Dashboard
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: semgrep.sarif
        if: always()
